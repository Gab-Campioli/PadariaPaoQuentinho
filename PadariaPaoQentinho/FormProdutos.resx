<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>